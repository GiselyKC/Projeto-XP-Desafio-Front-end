{"ast":null,"code":"var _jsxFileName = \"/home/gisele/Documentos/Projeto-XP-Desafio-Front-end/home-broker-xp/src/context/MyProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // import Context from './MyContext';\n\nimport ApiFake from '../db.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [usuarios, setUsuarios] = useState(ApiFake.usuarios);\n  const [acoes, setAcoes] = useState(ApiFake.acoes);\n  const [email, setEmail] = useState(''); // const contextValue = useMemo(() => ({\n  //   email,\n  //   setEmail,\n  //   usuarios,\n  //   setUsuarios,\n  //   acoes,\n  //   setAcoes,\n  // }), [email, usuarios, acoes]);\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      email,\n      setEmail,\n      usuarios,\n      setUsuarios,\n      acoes,\n      setAcoes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"JbBVqO69b6SWQ36YRuHSPUT5Nf0=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["React","useState","PropTypes","ApiFake","Provider","children","usuarios","setUsuarios","acoes","setAcoes","email","setEmail","propTypes","node","isRequired"],"sources":["/home/gisele/Documentos/Projeto-XP-Desafio-Front-end/home-broker-xp/src/context/MyProvider.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import Context from './MyContext';\nimport ApiFake from '../db.json';\n\nfunction Provider({ children }) {\n  const [usuarios, setUsuarios] = useState(ApiFake.usuarios);\n  const [acoes, setAcoes] = useState(ApiFake.acoes);\n  const [email, setEmail] = useState('');\n\n  // const contextValue = useMemo(() => ({\n  //   email,\n  //   setEmail,\n  //   usuarios,\n  //   setUsuarios,\n  //   acoes,\n  //   setAcoes,\n\n  // }), [email, usuarios, acoes]);\n\n  return (\n    <Provider value={\n      {\n        email,\n        setEmail,\n        usuarios,\n        setUsuarios,\n        acoes,\n        setAcoes,\n      }\n    }\n    >\n      { children }\n    </Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACE,OAAO,CAACG,QAAT,CAAxC;EACA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACE,OAAO,CAACK,KAAT,CAAlC;EACA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC,CAH8B,CAK9B;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAEA,oBACE,QAAC,QAAD;IAAU,KAAK,EACb;MACES,KADF;MAEEC,QAFF;MAGEL,QAHF;MAIEC,WAJF;MAKEC,KALF;MAMEC;IANF,CADF;IAAA,UAWIJ;EAXJ;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA9BQD,Q;;KAAAA,Q;AAgCTA,QAAQ,CAACQ,SAAT,GAAqB;EACnBP,QAAQ,EAAEH,SAAS,CAACW,IAAV,CAAeC;AADN,CAArB;AAIA,eAAeV,QAAf"},"metadata":{},"sourceType":"module"}